/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.StringInterface;


class RawString implements StringInterface
{
	protected string s;
	
	/**
	 * Constructor
	 */
	public void constructor(var s)
	{
		this.s = "";
		if (rtl::isString(s))
		{
			this.s = s;
		}
	}
	
	
	/**
	 * To string
	 */
	string toString()
	{
		return this.s;
	}
	
	
	#ifcode PHP then
	function __toString(){ return $this->toString(); }
	#endif
	
	
	/**
	 * Normalize array
	 */
	static string normalize(var item)
	{
		if (rtl::isString(item))
		{
			return item;
		}
		else if (item instanceof RawString)
		{
			return item.s;
		}
		else if (item instanceof Collection)
		{
			item = item.map(
				string (var item) => static::normalize(item)
			);
			return rs::join("", item);
		}
		return "";
	}
}

/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace Runtime;

use Runtime.CoreStruct;
use Runtime.Collection;
use Runtime.Map;
use Runtime.Message;
use Runtime.rtl;
use Runtime.RuntimeConstant;
use Runtime.Session;


struct MessageRPC<primitive> extends Message
{
	/* Data */
	string uri = "";
	string api_name = "";
	string space_name = "";
	string method_name = "";
	Dict data = null;
	
	/* Result */
	int code = 0;
	string error = "";
	primitive response = null;
	Collection<string> logs = null;	
	bool have_result = false;
	
	
	/**
	 * Returns true if success
	 * @return bool
	 */
	static bool isSuccess(Message msg) => msg.have_result and msg.code >= RuntimeConstant::ERROR_OK;
	
	
	
	/**
	 * Set success result
	 * @param primitive res
	 * @return Message
	 */
	static Message success(primitive response, Message msg) =>
		msg.copy{ "code": RuntimeConstant::ERROR_OK, "error": "", "response": response, "have_result": true }
	;
	
	
	
	/**
	 * Set fail result
	 * @param primitive res
	 * @return Message
	 */
	static Message fail(string error = "", int code = -1, primitive response, Message msg) =>
		msg.copy{ "code": code, "error": error, "response": response, "have_result": true }
	;
}

/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.BaseObject;
use Runtime.Context;


class BaseProvider extends BaseObject
{
	protected bool started = false;
	protected Dict params = null;
	
	
	/**
	 * Returns true if started
	 */
	bool isStarted() => this.started;
	
	
	/**
	 * Return param
	 */
	string getParam(string param_name, var def_value)
	{
		if (this.param == null) return def_value;
		if (this.param.has(param_name)) return def_value;
		return this.param.get(param_name);
	}
	
	
	/**
	 * Constructor
	 */
	void constructor(Dict params = null)
	{
		parent();
		this.params = (params != null) ? params.toDict() : null;
	}
	
	
	/**
	 * Init provider
	 */
	async void init()
	{
	}
	
	
	/**
	 * Start provider
	 */
	async void start()
	{
		this.started = true;
	}
}
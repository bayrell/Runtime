/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */
 
namespace BayrellRtl.Types;

use BayrellRtl.Types.Vector;
use BayrellRtl.CoreObject;


class Pipe extends CoreObject{
	
	protected Vector<func> pipe = null;
	
	
	/**
	 * Constructor
	 */
	public void constructor(){
		parent();
		this.pipe = new Vector<func>();
	}
	
	
	
	/**
	 * Constructor
	 */
	public void destructor(){
		delete this.pipe;
		parent();
	}
	
	
	
	/**
	 * Add function to pipe
	 */
	public Pipe then(func f){
		this.pipe.push(f);
		return this;
	}
	
	
	
	/**
	 * Run pipe of functions
	 * @param mixed obj - input value
	 * @return mixed - the result
	 */
	public mixed run(mixed obj){
		
		return this.pipe.reduce( 
			mixed (mixed res, func item){ 
				return item(res); 
			}, 
			obj
		);
		
	}
	
}
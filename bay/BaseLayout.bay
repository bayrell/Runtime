/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.BaseModel;
use Runtime.DefaultLayout;
use Runtime.Serializer;


class BaseLayout extends BaseModel
{
	Vector<string> components = [];
	string component = classof DefaultLayout;
	string current_page_model = "";
	string lang = "en";
	string title = "";
	
	
	/**
	 * Init params
	 */
	void initParams(Dict params = null)
	{
		parent(params);
		this.layout = this;
	}
	
	
	/**
	 * Serialize object
	 */
	void serialize(Serializer serializer, Map data)
	{
		parent(serializer, data);
		serializer.process(this, "current_page_model", data);
	}
	
	
	/**
	 * Add component
	 */
	void addComponent(string class_name)
	{
		this.components.push(class_name);
	}
	
	
	/**
	 * Returns page model
	 */
	BaseModel getPageModel() => this.widgets.get(this.current_page_model);
	
	
	/**
	 * Set page model
	 */
	void setPageModel(string class_name)
	{
		this.current_page_model = class_name;
		
		BaseModel page = this.getWidget(class_name);
		if (not page)
		{
			page = rtl::newInstance(class_name, [{"widget_name": class_name}]);
			this.setWidget(class_name, page);
		}
	}
}
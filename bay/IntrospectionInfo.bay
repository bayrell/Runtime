/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2020 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.BaseStruct;
use Runtime.rtl;
use Runtime.lib;
use Runtime.Collection;


struct IntrospectionInfo extends BaseStruct
{
	static const string ITEM_CLASS = "class";
	static const string ITEM_FIELD = "field";
	static const string ITEM_METHOD = "method";
	
	public string class_name = "";
	public string kind = "";
	public string name = "";
	public Collection<BaseStruct> annotations = null;
	
	
	/**
	 * Returns true if has annotations by class_name
	 * @string class_name
	 * @return bool
	 */
	Collection<BaseStruct> filterAnnotations(string class_name)
	{
		if (this.annotations == null) return null;
		return this.annotations.filter( lib::isInstance(class_name) ).toCollection();
	}
}


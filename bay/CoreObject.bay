/*!
 *  Bayrell Runtime Library.  
 *
 *  (c) Copyright 2016-2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayrellRtl;

use BayrellRtl.Exceptions.AssertError;
use BayrellRtl.Lib.rtl;


class CoreObject{
	
	protected bool _is_destroyed = false;

	
	
	/** 
	 * Constructor
	 */
	public void constructor(ContextInterface context){
		#switch
		#case ifcode JAVASCRIPT then
		this._init();
		#endswitch
	}
	
	
	
	#switch
	#case ifcode JAVASCRIPT then
	_init(){
	}
	#endswitch
	
	
	
	/**
	 * Destructor
	 */
	public void destructor(){
		this._is_destroyed = true;
	}
	
	
	
	#switch
	#case ifcode JAVASCRIPT then
	_del(){
		if (!this._is_destroyed)
			this.destructor();
	}
	#case ifcode PHP then
	function __destruct() {
		if (!$this->_is_destroyed) 
			$this->destructor();
	}
	#endswitch
	
	
	
	/**
	 * Clone current object
	 * @return CoreObject
	 */
	public CoreObject clone(ContextInterface context = null){
		CoreObject res = this.newInstance();
		
		/* Assign all values */
		res.assign(this);
		
		return res;
	}
	
	
	
	/**
	 * Assign all data from other object
	 * @param CoreObject obj
	 */
	void assign(CoreObject obj){
	}
	
	
	
	/**
	 * Equals value1 and value2. Throw exception if value1 != value2
	 * @param var value1
	 * @param var value2
	 */
	public void assert(boolean value, string message = ""){
		if (!value){
			throw new AssertError(null, message);
		}
	}
}
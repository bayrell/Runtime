/*!
 *  Bayrell Runtime Library.  
 *
 *  (c) Copyright 2016-2017 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace BayrellRtl;

use BayrellRtl.Lib.rtl;
use BayrellRtl.Interfaces.ContextInterface;


class CoreObject{
	
	protected ContextInterface _context = null;
	protected bool _is_destroyed = false;
	
	
	
	/**
	 * Get context
	 *
	 * @return ContextInterface 
	 */
	public ContextInterface context(){
		return this._context;
	}
	
	
	
	/**
	 * Set context
	 *
	 * @param ContextInterface 
	 */
	public ContextInterface setContext(ContextInterface context){
		if (this._context == null)
			this._context = context;
	}
	
	
	
	/** 
	 * Constructor
	 */
	void constructor(ContextInterface context = null){
		#switch
		#case ifcode JAVASCRIPT then
		this._init();
		#endswitch
		this._context = context;
	}
	
	
	
	#switch
	#case ifcode JAVASCRIPT then
	_init(){
	}
	#endswitch
	
	
	
	/**
	 * Destructor
	 */
	public void destructor(){
		this._is_destroyed = true;
	}
	
	
	
	#switch
	#case ifcode JAVASCRIPT then
	_del(){
		if (!this._is_destroyed)
			this.destructor();
	}
	#case ifcode PHP then
	function __destruct() {
		if (!$this->_is_destroyed) 
			$this->destructor();
	}
	#endswitch
	
	
	
	/**
	 * Clone current object
	 * @return CoreObject
	 */
	CoreObject clone(ContextInterface context = null){
		CoreObject res = this.newInstance();
		
		if (context == null)
			res._context = this._context;
		else
			res._context = context;
		
		return res;
	}
	
	
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;


/* Math Functions */
class Math
{
	/**
	 * Round up
	 * @param double value
	 * @return int
	 */
	pure string ceil(double value)
	{
		#switch
		#case ifcode PHP then
		
		return ceil($value);
		
		#case ifcode JAVASCRIPT then
		
		return Math.ceil(value);
		
		#endswitch
	}
	
	
	/**
	 * Round down
	 * @param double value
	 * @return int
	 */
	pure string floor(double value)
	{
		#switch
		#case ifcode PHP then
		
		return floor($value);
		
		#case ifcode JAVASCRIPT then
		
		return Math.floor(value);
		
		#endswitch
	}
	
	
	/**
	 * Round down
	 * @param double value
	 * @return int
	 */
	pure string round(double value)
	{
		#switch
		#case ifcode PHP then
		
		return round($value);
		
		#case ifcode JAVASCRIPT then
		
		return Math.round(value);
		
		#endswitch
	}
	
	
	/**
	 * Returns abs
	 */
	pure var abs(var a)
	{
		if (a < 0) return 0 - a;
		else return a;
	}
	
	
	/**
	 * Returns max
	 */
	pure var max(var a, var b)
	{
		if (a > b) return a;
		else return b;
	}
	
	
	/**
	 * Returns min
	 */
	pure var min(var a, var b)
	{
		if (a < b) return a;
		else return b;
	}
	
	
	/**
	 * Returns random value x, where 0 <= x < 1
	 * @return double
	 */
	static double urandom()
	{
		#switch
		#case ifcode PHP then
		
		return mt_rand() / (mt_getrandmax() + 1);
		
		#case ifcode JAVASCRIPT then
		
		if (
			window != undefined && window.crypto != undefined &&
			window.crypto.getRandomValues != undefined)
		{
			var s = new Uint32Array(1);
			window.crypto.getRandomValues(s);
			return s[0] / 4294967296;
		}
		
		return Math.random();
		
		#endswitch
	}
	
	
	/**
	 * Returns random value x, where a <= x <= b
	 * @param int a
	 * @param int b
	 * @return int
	 */
	static int random(int a, int b)
	{
		return static::round(static::urandom() * (b - a) + a);
	}
	
}
/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.BaseObject;
use Runtime.Component;


class VirtualDom extends BaseObject
{
	Component component = null;
	Map attrs = null;
	Vector items = [];
	string name = "";
	
	
	/**
	 * Constructor
	 */
	void constructor(Component component = null)
	{
		parent();
		this.component = component;
	}
	
	
	/**
	 * Returns true if tag_name is component
	 */
	static bool isComponent(string tag_name)
	{
		if (tag_name == "") return false;
		string first = rs::substr(tag_name, 0, 1);
		return rs::upper(first) == first;
	}
	
	
	/**
	 * Add element
	 */
	VirtualDom element(var name, Dict attrs = null)
	{
		VirtualDom item = static::newInstance([this.component]);
		item.name = name;
		item.attrs = attrs;
		this.push(item);
		return item;
	}
	
	
	/**
	 * Push content
	 */
	void push(var content)
	{
		this.items.push(content);
	}
}
/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.CoreStruct;
use Runtime.Dict;
use Runtime.Map;
use Runtime.rtl;
use Runtime.Collection;
use Runtime.Vector;


struct UIStruct extends CoreStruct
{
	const string TYPE_ELEMENT = "element";
	const string TYPE_COMPONENT = "component";
	const string TYPE_STRING = "string";
	const string TYPE_RAW = "raw";
	
	
	public string key = "";
	public string name = "";
	public string kind = "element";
	public string content = "";
	public string ref = "";
	public string control = "";
	public string signal_in = "";
	public string signal_out = "";
	public Dict<primitive> props = null;
	public Collection<UIStruct> children = null;
	
	
	
	/* TODO: Rewrite to lambda functions */
	
	
	/**
	 * Returns true if component
	 * @return bool
	 */
	public bool isComponent()
	{
		return this.kind == self::TYPE_COMPONENT;
	}
	
	
	
	/**
	 * Returns true if string
	 * @return bool
	 */
	public bool isString()
	{
		return this.kind == self::TYPE_STRING or this.kind == self::TYPE_RAW;
	}
	
	
	
	/**
	 * Returns true if component and name == class_name
	 * @param string class_name
	 * @return bool
	 */
	public bool isClass(string class_name)
	{
		if (this.is_component and this.name == class_name)
			return true;
		return false;
	}
	
	
	
	/**
	 * Returns props value
	 * @return mixed
	 */
	public mixed getProps(string key, mixed default_value, string type_value = "mixed", string type_template = "")
	{
		if (this.props == null) return default_value;
		return this.props.get(key, default_value, type_value, type_template);
	}
}

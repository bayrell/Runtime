/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.CoreStruct;
use Runtime.Map;
use Runtime.rtl;
use Runtime.Vector;


class UIStruct extends CoreStruct
{
	const string TYPE_ELEMENT = "element";
	const string TYPE_COMPONENT = "component";
	const string TYPE_STRING = "string";
	const string TYPE_RAW = "raw";
	
	public string id = "";
	public string key = "";
	public string name = "";
	public string kind = "element";
	public string content = "";
	public Map<mixed> props = null;
	public Vector<mixed> children = null;
	
	
	
	/** 
	 * Constructor
	 */
	public void constructor(Map obj = null, bool can_call_created = true)
	{
		parent();
		if (obj){
			obj.each(
				void (string key, mixed value)
				{
					if (key == "id") this.id = value;
					else if (key == "key") this.key = value;
					else if (key == "name") this.name = value;
					else if (key == "kind") this.kind = value;
					else if (key == "content") this.content = value;
					else if (key == "props") this.props = value;
					else if (key == "children") this.children = value;
				}
			);
		}
		if (can_call_created) this.onCreated();
	}
	
	
	
	/**
	 * Returns true if component
	 * @return bool
	 */
	public bool isComponent()
	{
		return this.kind == self::TYPE_COMPONENT;
	}
	
	
	
	/**
	 * Returns true if string
	 * @return bool
	 */
	public bool isString()
	{
		return this.kind == self::TYPE_STRING or this.kind == self::TYPE_RAW;
	}
	
	
	
	/**
	 * Returns true if component and name == class_name
	 * @param string class_name
	 * @return bool
	 */
	public bool instanceOf(string class_name)
	{
		if (this.is_component and this.name == class_name)
			return true;
		return false;
	}
	
	
	
	/**
	 * Returns props value
	 * @return mixed
	 */
	public mixed getProps(string key, mixed default_value, string type_value = "mixed", string type_template = "")
	{
		if (this.props == null) return default_value;
		return this.props.get(key, default_value, type_value, type_template);
	}
}

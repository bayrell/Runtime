/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime.Exceptions;

use Runtime.rtl;
use Runtime.RuntimeConstant;
use Runtime.Exceptions.AbstractException;


class ApiError extends AbstractException
{
	
	void constructor(Object prev = null)
	{
		parent(
			prev.getErrorMessage(),
			rtl::ERROR_API_ERROR,
			prev
		);
	}
	
	
	/**
	 * Returns error message
	 */
	public string getErrorMessage()
	{
		return this.prev.getErrorMessage();
	}
	
	
	/**
	 * Returns error code
	 */
	public int getErrorCode()
	{
		return this.prev.getErrorCode();
	}
	
	
	/**
	 * Returns error file name
	 */
	public string getFileName()
	{
		return this.prev.getFileName();
	}
	
	
	/**
	 * Returns error line
	 */
	public string getErrorLine()
	{
		return this.prev.getErrorLine();
	}
	
	
	/**
	 * Returns error position
	 */
	public string getErrorPos()
	{
		return this.prev.getErrorPos();
	}
	
}
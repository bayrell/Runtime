/*!
 *  BayLang Technology
 *
 *  (c) Copyright 2016-2024 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.BaseStruct;


class Callback
{
	var obj;
	string name;
	var tag = null;
	
	
	/**
	 * Constructor
	 */
	public void constructor(var obj, string name, var tag = null)
	{
		/* Init object */
		this._init();
		
		/* Set variables */
		this.obj = obj;
		this.name = name;
		this.tag = tag;
	}
	
	
	/**
	 * Check if method exists
	 */
	bool exists()
	{
		if (not rtl::method_exists(this.obj, this.name))
		{
			return false;
		}
		return true;
	}
	
	
	/**
	 * Apply
	 */
	var apply(Collection args = null) => rtl::apply(this, args);
	
	
	#ifcode PHP then
	
	function __invoke()
	{
		$obj = $this->obj;
		if (gettype($obj) == "string") $obj = rtl::find_class($obj);
		return call_user_func_array([$obj, $this->name], func_get_args());
	}
	
	#endif
}

/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2018 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.bayrell.org/licenses/APACHE-LICENSE-2.0.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.rtl;
use Runtime.Vector;
use Runtime.Interfaces.AssetsInterface;
use Runtime.Interfaces.ModuleDescriptionInterface;


class ModuleDescription implements ModuleDescriptionInterface, AssetsInterface{

	
	/**
	 * Returns module name
	 * @return string
	 */
	public static string getName(){
		return "Runtime";
	}
	
	
	
	/**
	 * Returns module name
	 * @return string
	 */
	public static string getModuleVersion(){
		return "0.4.0";
	}
	
	
	
	/**
	 * Init context
	 * @param ContextInterface context
	 */
	public static void initContext(ContextInterface context){
	}
	
	
	
	/**
	 * Called then module registed in context
	 * @param ContextInterface context
	 */
	public static void onRegister(ContextInterface context){
	}
	
	
	
	/**
	 * Returns description interfaces of the current module
	 * @return Vector<string>
	 */	
	public static Vector<string> getInterfaces(){
		return [
			'Runtime.Interfaces.AssetsInterface',
			'Runtime.Interfaces.ModuleDescriptionInterface',
		];
	}
	
	
	
	/**
	 * Returns required assets
	 * @return Map<string, string>
	 */	
	public static Vector<string> getRequiredAssets(){
		return null;
	}
	
	
	
	/**
	 * Returns required modules
	 * @return Map<string, string>
	 */	
	public static Map<string, string> getRequiredModules(){
		return null;
	}
	
	
	
	/**
	 * Returns required modules
	 * @return Map<string, string>
	 */	
	public static Map<string, string> getRequiredDevModules(){
		return null;
	}
	
	
	
	/**
	 * Returns sync loaded files
	 */		
	public static Vector<string> assetsSyncLoad(){
		return null;
	}
	
	
	
	/**
	 * Returns async loaded files
	 */			
	public static Vector<mixed> assetsAsyncLoad(){
		return [
			[
				"/assets/Runtime/rs.js",
				"/assets/Runtime/re.js",
				"/assets/Runtime/rtl.js",
				"/assets/Runtime/Map.js",
				"/assets/Runtime/Utils.js",
				"/assets/Runtime/Vector.js",
				"/assets/Runtime/CoreObject.js",
				"/assets/Runtime/RuntimeConstant.js",
				"/assets/Runtime/Exceptions/RuntimeException.js",
				"/assets/Runtime/Interfaces/CloneableInterface.js",
				"/assets/Runtime/Interfaces/ContextInterface.js",
				"/assets/Runtime/Interfaces/FactoryInterface.js",
				"/assets/Runtime/Interfaces/ModuleDescriptionInterface.js",
				"/assets/Runtime/Interfaces/SerializeInterface.js",
				"/assets/Runtime/Interfaces/StringInterface.js",
			],
			[
				"/assets/Runtime/Context.js",
				"/assets/Runtime/ContextObject.js",
				"/assets/Runtime/ModuleDescription.js",
				"/assets/Runtime/Exceptions/IndexOutOfRange.js",
				"/assets/Runtime/Exceptions/KeyNotFound.js",
				"/assets/Runtime/Exceptions/UnknownError.js",
			]
		];
	}
	
}
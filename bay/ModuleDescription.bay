/*!
 *  Bayrell Runtime Library
 *
 *  (c) Copyright 2016-2019 "Ildar Bikmamatov" <support@bayrell.org>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

namespace Runtime;

use Runtime.Map;
use Runtime.rtl;
use Runtime.Vector;
use Runtime.Annotations.LambdaChain;
use Runtime.Annotations.LambdaChainDeclare;
use Runtime.Annotations.Provider;
use Runtime.Interfaces.AssetsInterface;
use Runtime.Interfaces.ModuleDescriptionInterface;


class ModuleDescription implements ModuleDescriptionInterface, AssetsInterface
{

	
	/**
	 * Returns module name
	 * @return string
	 */
	lambda string getModuleName() => "Runtime";
	
	
	
	/**
	 * Returns module name
	 * @return string
	 */
	lambda string getModuleVersion() => "0.8.0-alpha.9";
	
	
	
	/**
	 * Returns required modules
	 * @return Map<string>
	 */	
	lambda Map<string> requiredModules() => null;
	
	
	
	/**
	 * Compatibility with older versions
	 */
	lambda Map<string> getRequiredModules() => static::requiredModules();
	
	
	
	/**
	 * Returns module files load order
	 * @return Collection<string>
	 */
	lambda Collection<string> assets() => 
	[
		"Runtime/rtl",
		"Runtime/rs",
		"Runtime/re",
		"Runtime/lib",
		"Runtime/Collection",
		"Runtime/Container",
		"Runtime/CoreObject",
		"Runtime/Dict",
		"Runtime/Emitter",
		"Runtime/RuntimeConstant",
		"Runtime/RuntimeUtils",
		"Runtime/Exceptions/RuntimeException",
		"Runtime/Interfaces/CloneableInterface",
		"Runtime/Interfaces/FactoryInterface",
		"Runtime/Interfaces/LocalBusInterface",
		"Runtime/Interfaces/ModuleDescriptionInterface",
		"Runtime/Interfaces/RemoteBusInterface",
		"Runtime/Interfaces/SerializeInterface",
		"Runtime/Interfaces/StringInterface",
		"Runtime/Interfaces/SubscribeInterface",
		"Runtime/AsyncTask",
		"Runtime/AsyncThread",
		"Runtime/CoreStruct",
		"Runtime/CoreProvider",
		"Runtime/CoreEvent",
		"Runtime/BusResult",
		"Runtime/Map",
		"Runtime/Message",
		"Runtime/MessageRPC",
		"Runtime/PathInfo",
		"Runtime/ModuleDescription",
		"Runtime/Reference",
		"Runtime/Vector",
		"Runtime/Exceptions/ApiException",
		"Runtime/Exceptions/IndexOutOfRange",
		"Runtime/Exceptions/KeyNotFound",
		"Runtime/Exceptions/UnknownError",
		"Runtime/DateTime",
		"Runtime/Annotations/Entity",
		"Runtime/Annotations/IntrospectionClass",
		"Runtime/Annotations/IntrospectionInfo",
		"Runtime/Annotations/LambdaChain",
		"Runtime/Annotations/LambdaChainDeclare",
		"Runtime/Annotations/Driver",
		"Runtime/Annotations/Provider",
		"Runtime/UIStruct",
		"Runtime/Context",
		"Runtime/ContextObject",
	];
	
	
	
	/**
	 * Returns enities
	 */
	lambda Collection<Dict> entities() => 
	[
		/* Declare BusInterface */
		new Provider{ "name": "Runtime.Interfaces.LocalBusInterface", "kind": "interface" },
		new Provider{ "name": "Runtime.Interfaces.RemoteBusInterface", "kind": "interface" },
		
		/* Declare Lambda chains */
		new LambdaChainDeclare{ "name": "Runtime.Entities" },
	];
	
	
	
	/**
	 * Returns enities
	 */
	lambda Collection<Dict> resources() => null;
	
	
}